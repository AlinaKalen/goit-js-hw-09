{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAEC,iBAEF,IAAMC,EAAaC,SAASN,SAASC,cAAc,uBAAuBM,OACpEC,EAAOF,SAASN,SAASC,cAAc,sBAAsBM,OAC7DE,EAASH,SAASN,SAASC,cAAc,wBAAwBM,OAEvE,GAAIG,MAAML,IAAeK,MAAMF,IAASE,MAAMD,GAC5CE,MAAM,+DAIR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAI/BtB,EAHiBsB,EAAI,EACPP,EAAaO,EAAIJ,GAGxBK,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const firstDelay = parseInt(document.querySelector('input[name=\"delay\"]').value);\n  const step = parseInt(document.querySelector('input[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('input[name=\"amount\"]').value);\n\n  if (isNaN(firstDelay) || isNaN(step) || isNaN(amount)) {\n    alert('Please enter valid values for delay, step, and amount.');\n    return;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n    });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","parseInt","value","step","amount","isNaN","alert","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.833456fb.js.map"}